--- 4webm.plx	2024-10-27 20:32:43.059374361 +0100
+++ ../4webm-perl-win-release/4webm.plx	2024-10-27 20:27:24.382804503 +0100
@@ -15,6 +15,7 @@
 use Env;
 use IPC::Run qw(run timeout);
 use File::Copy;
+use Win32::Console::ANSI;
 
 # Defaults
 
@@ -50,14 +51,15 @@
 #Pack only the essentials, access the binaries in the PAR_PROGNAME directory => faster, but more files for user to manage.
 if ($ENV{PAR_0}) {
     my $env_dir = "$ENV{PAR_PROGNAME}";
-    $env_dir =~ s/\/\w+$//;
-    $dir = "$env_dir/$dir";
+    #using a large regex for those who rename the binary file.
+    $env_dir =~ s/\\[\w\-\,\;\.\:\#\+\~\´\`\=\{\}\(\)\[\]\&\%\$\§\!]+\.exe$//;
+    $dir = "$env_dir\\$dir";
 }
 
-if ($os eq "MSWin32") {
-    die "This version of 4webm-perl is not compatible with Windows. Please visit the github repository for 4webm-perl and download the correct version for your OS.\n";
+if ($os eq "linux") {
+    die "This version of 4webm-perl is not compatible with Linux. Please visit the github repository for 4webm-perl and download the correct version for your OS.\n";
 }
-elsif ($os ne "linux") {
+elsif ($os ne "MSWin32") {
     die "Your operating system ($os) is currently not supported.";
 }
 
@@ -123,39 +125,44 @@
     'extra-svt=s' => \$svt_args,
     'help' => \$pod,
     'man' => \$man
-    ) or die colored(["red"],"Unrecognised option(s)!")," You can access the help/usage screen by using -h\n";
+    ) or die colored(["bright_red"],"Unrecognised option(s)!")," You can access the help/usage screen by using -h\n";
 
-die colored(["red"], "Insufficient arguments!")," Type 4webm -h for a short usage screen.\nExiting...\n" unless ($input || $pod || $man);
+die colored(["bright_red"], "Insufficient arguments!")," Type 4webm -h for a short usage screen.\nExiting...\n" unless ($input || $pod || $man);
 
-pod2usage(-sections => "SYNOPSIS", -input => "$dir/usage.pod") if $pod;
-pod2usage(-perldocopt => "-o man",-verbose => 2, -input => "$dir/usage.pod") if $man;
+pod2usage(-sections => "SYNOPSIS", -input => "$dir\\usage.pod") if $pod;
+pod2usage(-perldocopt => "-o man",-verbose => 2, -input => "$dir\\usage.pod") if $man;
 
-die colored(["red"],"Input file/directory not found or empty!"),"\n" unless (-f $input || -s $input || -d $input);
-die colored(["red"],"File not found!")," Check file handle.\n" if (-f $input && $input !~ m/\.\w{2,4}$/);
+die colored(["bright_red"],"Input file/directory not found or empty!"),"\n" unless (-f $input || -s $input || -d $input);
+die colored(["bright_red"],"File not found!")," Check file handle.\n" if (-f $input && $input !~ m/\.\w{2,4}$/);
 
 $ffmpeg = "ffmpeg";
 $ffprobe = "ffprobe";
 if ($ffmpeg_path) {
     print "Specified ffmpeg \$DIR = $ffmpeg_path";
-    $ffmpeg = "$ffmpeg_path/ffmpeg";
-    $ffprobe = "$ffmpeg_path/ffprobe";
+    $ffmpeg = "$ffmpeg_path\\ffmpeg";
+    $ffprobe = "$ffmpeg_path\\ffprobe";
 }
 else {
     for my $path (split(":", $ENV{PATH})) {
-	if (-f "$path/$ffmpeg" && -x _) {
+	if (-f "$path\\$ffmpeg" && -x _) {
 	    $ffmpeg = "ffmpeg";
 	    $ffprobe = "ffprobe";
-	    $ffmpeg_path = "$path/$ffmpeg";
+	    $ffmpeg_path = "$path\\$ffmpeg";
 	    last;
 	}
     }
     unless ($ffmpeg_path) {
-	print "ffmpeg not found in \$PATH nor specified with --library\nUsing bundled executables.\n";
-	$ffmpeg = "$dir/ffmpeg/bin/ffmpeg";
-	$ffprobe = "$dir/ffmpeg/bin/ffprobe";
+    	if ($ENV{PAR_0}) {
+	    print "4webm-perl, bundled libraries.\n";
+	}
+	else {
+	    print "ffmpeg not found in \$PATH nor specified with --library\nUsing bundled executables.\n";
+	}
+	$ffmpeg = "$dir\\ffmpeg\\bin\\ffmpeg";
+	$ffprobe = "$dir\\ffmpeg\\bin\\ffprobe.exe";
     }
 }
-$svtvp9 = "$dir/SVT-VP9/SvtVp9EncApp";
+$svtvp9 = "$dir\\SVT-VP9\\SvtVp9EncApp";
 
 sub exitScript {
     exit($_[0]) unless ($force);
@@ -173,7 +180,7 @@
 sub proceed {
     my $affirm = "y";
     unless ($force) {
-	print "Proceed? [",colored(["green"],"y"),"/",colored(["red"],"n"),"]: ";
+	print "Proceed? [",colored(["bright_green"],"y"),"/",colored(["bright_red"],"n"),"]: ";
 	$affirm = <STDIN>;
 	chomp $affirm;
     }
@@ -192,7 +199,7 @@
 	encode();
     }
     else {
-	print colored(["yellow"],"\nExiting..."),"\n";
+	print colored(["bright_yellow"],"\nExiting..."),"\n";
 	exitScript(1);
     }
 }
@@ -223,9 +230,9 @@
 	$keyspace = "-g " . $framecount;
     }
 	
-    print colored(["magenta"],"\nPass 1/2:"),"\n";
-    qx($ffmpeg -hide_banner -loglevel error -stats -i "$infile" $stime $etime -c:v $libcv -b:v "$bitrate"K $keyspace $keyintmin -pass 1 -quality good -speed 4 $extra_args -an -f rawvideo -y /dev/null);
-    print colored(["magenta"],"\nPass 2/2:"),"\n";
+    print colored(["bright_magenta"],"\nPass 1/2:"),"\n";
+    qx($ffmpeg -hide_banner -loglevel error -stats -i "$infile" $stime $etime -c:v $libcv -b:v "$bitrate"K $keyspace $keyintmin -pass 1 -quality good -speed 4 $extra_args -an -f rawvideo -y NUL);
+    print colored(["bright_magenta"],"\nPass 2/2:"),"\n";
     qx($ffmpeg -hide_banner -loglevel error -stats -i "$infile" $stime $etime -c:v $libcv -b:v "$bitrate"K $keyspace $keyintmin -pass 2 -quality $quality -speed $speed $extra_args $audio_opts -row-mt 1 -map_metadata -1 -y "$outfile".webm);
     unlink "ffmpeg2pass-0.log";
     checkFileSize("$outfile.webm");
@@ -234,7 +241,7 @@
 sub encodeAudio {
     my $audio_file = $_[0];
     my $arg2 = ($_[1]) ? $_[1] : "";
-    print colored(["magenta"],"Pass 1/1:"),"\n";
+    print colored(["bright_magenta"],"Pass 1/1:"),"\n";
     qx($ffmpeg -hide_banner -loglevel error -stats -i "$infile" $stime $etime -vn $audio_opts "$infile"_audio.opus);
     qx($ffmpeg -hide_banner -loglevel error -stats -i "$audio_file" -i "$infile"_audio.opus -c:v copy $audio_opts -map 0:v:0 $arg2 $aspect -map 1:a:0 -shortest -map_metadata -1 -y "$outfile"_remux.webm);
     unlink "$infile\_audio.opus";
@@ -274,14 +281,14 @@
 	}
     }
     
-    print colored(["magenta"],"\nDemuxing, Stage 1/2:"),"\n";
+    print colored(["bright_magenta"],"\nDemuxing, Stage 1/2:"),"\n";
     run("$ffmpeg -hide_banner -loglevel error -stats -i \"$infile\" -pix_fmt yuv420p $stime $etime $extra_args -y raw.yuv") unless (-e "raw.yuv" && $keep_raw);
-    print colored(["magenta"],"\nEncoding, Stage 2/2:"),"\n";
+    print colored(["bright_magenta"],"\nEncoding, Stage 2/2:"),"\n";
     run("$svtvp9 -i raw.yuv -w $h_resolution -h $v_resolution -intra-period $keyspace -fps-num $numerator -fps-denom $denominator -rc $rc_mode -tbr $bitrate -min-qp 0 -max-qp 60 -tune $tune -enc-mode $speed \"$svt_args\" -b \"$outfile.ivf\"");
     unlink "raw.yuv" unless ($keep_raw);
 
     if ($audio) {
-	print "\n",colored(["magenta"],"Muxing audio"),"\n";
+	print "\n",colored(["bright_magenta"],"Muxing audio"),"\n";
 	encodeAudio("$outfile.ivf",$bsfv);
 	unlink "$outfile.ivf";
 	checkFileSize("$outfile\_remux.webm");
@@ -331,7 +338,7 @@
     if ($outfile_size > $file_size_limit) {
 	my $delta = $outfile_size - $file_size_limit;
 	($bitrate,$c_bitrate,$nominal_rate) = $delta->$eq_bitrate;
-	print "\nThe output file size is: ",colored(["red"],"$outfile_size")," MiB, which is larger than the max. permissible filesize of $file_size_limit MiB\n";
+	print "\nThe output file size is: ",colored(["bright_red"],"$outfile_size")," MiB, which is larger than the max. permissible filesize of $file_size_limit MiB\n";
 	
 	if ($audio) {
 	    $arate_adjust = $arate_adjust - $nominal_rate - 1;
@@ -343,7 +350,7 @@
 	    }
 	    else {
 		$margin = $margin + $nominal_rate + 1;
-		print colored(["yellow"],"Fix attempt not possible.")," resulting audio bitrate would drop below threshold of 32 kbps. Rerun with \"--margin $margin\".\n";
+		print colored(["bright_yellow"],"Fix attempt not possible.")," resulting audio bitrate would drop below threshold of 32 kbps. Rerun with \"--margin $margin\".\n";
 		exitScript(2);
 	    }
 	}
@@ -354,13 +361,13 @@
 	}
     }
     elsif ($outfile_size == 0) {
-	die colored(["red"],"\nEncoding error:")," No output file was generated\n";
+	die colored(["bright_red"],"\nEncoding error:")," No output file was generated\n";
     }
     else {
 	my $delta = $file_size_limit - $outfile_size;
 	($bitrate,$c_bitrate,$nominal_rate) = $delta->$eq_bitrate;
 	$margin = $margin - $nominal_rate + 1;
-	print "\nThe output file size is: ",colored(["green"],"$outfile_size")," MiB\n";
+	print "\nThe output file size is: ",colored(["bright_green"],"$outfile_size")," MiB\n";
 	
 	if ($nominal_rate > $LOWLIMIT && $outfile_size != 0) {    
 	    print "It may be possible to increase quality while staying within limits by setting \"--margin $margin\".\n";
@@ -431,7 +438,7 @@
 	$h_limit_resolution = $res[0];
 	$v_limit_resolution = $res[1];
     }
-    die colored(["red"],"Custom board parameters incomplete.")," Required parameters: Max. file size in MiB, max. duration in s\n" unless ($file_size_limit && $max_dur);
+    die colored(["bright_red"],"Custom board parameters incomplete.")," Required parameters: Max. file size in MiB, max. duration in s\n" unless ($file_size_limit && $max_dur);
     print <<EOF;
 
 #######################################
@@ -470,7 +477,7 @@
     }
 }
 elsif ($audio) {
-    die colored(["red"],"\nBoard limit:")," The selected board does not support audio. Change board, disable audio or force encoding by setting -b/--board @$board,1\n";
+    die colored(["bright_red"],"\nBoard limit:")," The selected board does not support audio. Change board, disable audio or force encoding by setting -b/--board @$board,1\n";
 }
 
 }
@@ -586,7 +593,7 @@
 }
 
 if ($h_resolution > $h_limit_resolution || $v_resolution > $v_limit_resolution) {
-    die "The video resolution exceeds the maximum of ",colored(["yellow"],"2048x2048"),". Please scale or crop the input via -ex/--extra.\n";
+    die "The video resolution exceeds the maximum of ",colored(["bright_yellow"],"2048x2048"),". Please scale or crop the input via -ex/--extra.\n";
 }
 
 if ($libcv eq "svt-vp9" && ($h_resolution % 8 != 0 || $v_resolution % 8 != 0)) {
@@ -606,7 +613,7 @@
 }
     
 sub printMediaInfo {
-print color("magenta");
+print color("bright_magenta");
 print <<EOF;
 ==================================================================================================
 INPUT FILE:			$infile
